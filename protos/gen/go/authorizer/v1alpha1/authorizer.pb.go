// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: authorizer/v1alpha1/authorizer.proto

package v1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Schema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeDefinitions map[string]*TypeDefinition `protobuf:"bytes,1,rep,name=type_definitions,json=typeDefinitions,proto3" json:"type_definitions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Schema) Reset() {
	*x = Schema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorizer_v1alpha1_authorizer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Schema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schema) ProtoMessage() {}

func (x *Schema) ProtoReflect() protoreflect.Message {
	mi := &file_authorizer_v1alpha1_authorizer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Schema.ProtoReflect.Descriptor instead.
func (*Schema) Descriptor() ([]byte, []int) {
	return file_authorizer_v1alpha1_authorizer_proto_rawDescGZIP(), []int{0}
}

func (x *Schema) GetTypeDefinitions() map[string]*TypeDefinition {
	if x != nil {
		return x.TypeDefinitions
	}
	return nil
}

type TypeDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Relations   map[string]*Relation   `protobuf:"bytes,2,rep,name=relations,proto3" json:"relations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Permissions map[string]*Permission `protobuf:"bytes,3,rep,name=permissions,proto3" json:"permissions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TypeDefinition) Reset() {
	*x = TypeDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorizer_v1alpha1_authorizer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeDefinition) ProtoMessage() {}

func (x *TypeDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_authorizer_v1alpha1_authorizer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeDefinition.ProtoReflect.Descriptor instead.
func (*TypeDefinition) Descriptor() ([]byte, []int) {
	return file_authorizer_v1alpha1_authorizer_proto_rawDescGZIP(), []int{1}
}

func (x *TypeDefinition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TypeDefinition) GetRelations() map[string]*Relation {
	if x != nil {
		return x.Relations
	}
	return nil
}

func (x *TypeDefinition) GetPermissions() map[string]*Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type Relation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             string                     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	TypeRestrictions []*RelationTypeRestriction `protobuf:"bytes,2,rep,name=type_restrictions,json=typeRestrictions,proto3" json:"type_restrictions,omitempty"`
}

func (x *Relation) Reset() {
	*x = Relation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorizer_v1alpha1_authorizer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Relation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Relation) ProtoMessage() {}

func (x *Relation) ProtoReflect() protoreflect.Message {
	mi := &file_authorizer_v1alpha1_authorizer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Relation.ProtoReflect.Descriptor instead.
func (*Relation) Descriptor() ([]byte, []int) {
	return file_authorizer_v1alpha1_authorizer_proto_rawDescGZIP(), []int{2}
}

func (x *Relation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Relation) GetTypeRestrictions() []*RelationTypeRestriction {
	if x != nil {
		return x.TypeRestrictions
	}
	return nil
}

type RelationTypeRestriction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceType string `protobuf:"bytes,1,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	Relation     string `protobuf:"bytes,2,opt,name=relation,proto3" json:"relation,omitempty"`
}

func (x *RelationTypeRestriction) Reset() {
	*x = RelationTypeRestriction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorizer_v1alpha1_authorizer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelationTypeRestriction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelationTypeRestriction) ProtoMessage() {}

func (x *RelationTypeRestriction) ProtoReflect() protoreflect.Message {
	mi := &file_authorizer_v1alpha1_authorizer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelationTypeRestriction.ProtoReflect.Descriptor instead.
func (*RelationTypeRestriction) Descriptor() ([]byte, []int) {
	return file_authorizer_v1alpha1_authorizer_proto_rawDescGZIP(), []int{3}
}

func (x *RelationTypeRestriction) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *RelationTypeRestriction) GetRelation() string {
	if x != nil {
		return x.Relation
	}
	return ""
}

type Permission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string                   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Expression *PermissionExpressionRef `protobuf:"bytes,2,opt,name=expression,proto3" json:"expression,omitempty"`
}

func (x *Permission) Reset() {
	*x = Permission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorizer_v1alpha1_authorizer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Permission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Permission) ProtoMessage() {}

func (x *Permission) ProtoReflect() protoreflect.Message {
	mi := &file_authorizer_v1alpha1_authorizer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Permission.ProtoReflect.Descriptor instead.
func (*Permission) Descriptor() ([]byte, []int) {
	return file_authorizer_v1alpha1_authorizer_proto_rawDescGZIP(), []int{4}
}

func (x *Permission) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Permission) GetExpression() *PermissionExpressionRef {
	if x != nil {
		return x.Expression
	}
	return nil
}

type PermissionExpressionRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Expression:
	//
	//	*PermissionExpressionRef_UnaryExpression
	//	*PermissionExpressionRef_HierarchicalExpression
	//	*PermissionExpressionRef_SetExpression
	Expression isPermissionExpressionRef_Expression `protobuf_oneof:"expression"`
}

func (x *PermissionExpressionRef) Reset() {
	*x = PermissionExpressionRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorizer_v1alpha1_authorizer_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermissionExpressionRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionExpressionRef) ProtoMessage() {}

func (x *PermissionExpressionRef) ProtoReflect() protoreflect.Message {
	mi := &file_authorizer_v1alpha1_authorizer_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionExpressionRef.ProtoReflect.Descriptor instead.
func (*PermissionExpressionRef) Descriptor() ([]byte, []int) {
	return file_authorizer_v1alpha1_authorizer_proto_rawDescGZIP(), []int{5}
}

func (m *PermissionExpressionRef) GetExpression() isPermissionExpressionRef_Expression {
	if m != nil {
		return m.Expression
	}
	return nil
}

func (x *PermissionExpressionRef) GetUnaryExpression() *UnaryPermissionExpression {
	if x, ok := x.GetExpression().(*PermissionExpressionRef_UnaryExpression); ok {
		return x.UnaryExpression
	}
	return nil
}

func (x *PermissionExpressionRef) GetHierarchicalExpression() *HierarchicalPermissionExpression {
	if x, ok := x.GetExpression().(*PermissionExpressionRef_HierarchicalExpression); ok {
		return x.HierarchicalExpression
	}
	return nil
}

func (x *PermissionExpressionRef) GetSetExpression() *PermissionSetExpressionRef {
	if x, ok := x.GetExpression().(*PermissionExpressionRef_SetExpression); ok {
		return x.SetExpression
	}
	return nil
}

type isPermissionExpressionRef_Expression interface {
	isPermissionExpressionRef_Expression()
}

type PermissionExpressionRef_UnaryExpression struct {
	UnaryExpression *UnaryPermissionExpression `protobuf:"bytes,1,opt,name=unary_expression,json=unaryExpression,proto3,oneof"`
}

type PermissionExpressionRef_HierarchicalExpression struct {
	HierarchicalExpression *HierarchicalPermissionExpression `protobuf:"bytes,2,opt,name=hierarchical_expression,json=hierarchicalExpression,proto3,oneof"`
}

type PermissionExpressionRef_SetExpression struct {
	SetExpression *PermissionSetExpressionRef `protobuf:"bytes,3,opt,name=set_expression,json=setExpression,proto3,oneof"`
}

func (*PermissionExpressionRef_UnaryExpression) isPermissionExpressionRef_Expression() {}

func (*PermissionExpressionRef_HierarchicalExpression) isPermissionExpressionRef_Expression() {}

func (*PermissionExpressionRef_SetExpression) isPermissionExpressionRef_Expression() {}

type UnaryPermissionExpression struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceRelation string `protobuf:"bytes,1,opt,name=source_relation,json=sourceRelation,proto3" json:"source_relation,omitempty"`
}

func (x *UnaryPermissionExpression) Reset() {
	*x = UnaryPermissionExpression{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorizer_v1alpha1_authorizer_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnaryPermissionExpression) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnaryPermissionExpression) ProtoMessage() {}

func (x *UnaryPermissionExpression) ProtoReflect() protoreflect.Message {
	mi := &file_authorizer_v1alpha1_authorizer_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnaryPermissionExpression.ProtoReflect.Descriptor instead.
func (*UnaryPermissionExpression) Descriptor() ([]byte, []int) {
	return file_authorizer_v1alpha1_authorizer_proto_rawDescGZIP(), []int{6}
}

func (x *UnaryPermissionExpression) GetSourceRelation() string {
	if x != nil {
		return x.SourceRelation
	}
	return ""
}

type HierarchicalPermissionExpression struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base   string `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Target string `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *HierarchicalPermissionExpression) Reset() {
	*x = HierarchicalPermissionExpression{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorizer_v1alpha1_authorizer_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HierarchicalPermissionExpression) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HierarchicalPermissionExpression) ProtoMessage() {}

func (x *HierarchicalPermissionExpression) ProtoReflect() protoreflect.Message {
	mi := &file_authorizer_v1alpha1_authorizer_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HierarchicalPermissionExpression.ProtoReflect.Descriptor instead.
func (*HierarchicalPermissionExpression) Descriptor() ([]byte, []int) {
	return file_authorizer_v1alpha1_authorizer_proto_rawDescGZIP(), []int{7}
}

func (x *HierarchicalPermissionExpression) GetBase() string {
	if x != nil {
		return x.Base
	}
	return ""
}

func (x *HierarchicalPermissionExpression) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

type PermissionSetExpressionRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to SetExpression:
	//
	//	*PermissionSetExpressionRef_Union_
	//	*PermissionSetExpressionRef_Intersection_
	SetExpression isPermissionSetExpressionRef_SetExpression `protobuf_oneof:"set_expression"`
}

func (x *PermissionSetExpressionRef) Reset() {
	*x = PermissionSetExpressionRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorizer_v1alpha1_authorizer_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermissionSetExpressionRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionSetExpressionRef) ProtoMessage() {}

func (x *PermissionSetExpressionRef) ProtoReflect() protoreflect.Message {
	mi := &file_authorizer_v1alpha1_authorizer_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionSetExpressionRef.ProtoReflect.Descriptor instead.
func (*PermissionSetExpressionRef) Descriptor() ([]byte, []int) {
	return file_authorizer_v1alpha1_authorizer_proto_rawDescGZIP(), []int{8}
}

func (m *PermissionSetExpressionRef) GetSetExpression() isPermissionSetExpressionRef_SetExpression {
	if m != nil {
		return m.SetExpression
	}
	return nil
}

func (x *PermissionSetExpressionRef) GetUnion() *PermissionSetExpressionRef_Union {
	if x, ok := x.GetSetExpression().(*PermissionSetExpressionRef_Union_); ok {
		return x.Union
	}
	return nil
}

func (x *PermissionSetExpressionRef) GetIntersection() *PermissionSetExpressionRef_Intersection {
	if x, ok := x.GetSetExpression().(*PermissionSetExpressionRef_Intersection_); ok {
		return x.Intersection
	}
	return nil
}

type isPermissionSetExpressionRef_SetExpression interface {
	isPermissionSetExpressionRef_SetExpression()
}

type PermissionSetExpressionRef_Union_ struct {
	Union *PermissionSetExpressionRef_Union `protobuf:"bytes,1,opt,name=union,proto3,oneof"`
}

type PermissionSetExpressionRef_Intersection_ struct {
	Intersection *PermissionSetExpressionRef_Intersection `protobuf:"bytes,2,opt,name=intersection,proto3,oneof"`
}

func (*PermissionSetExpressionRef_Union_) isPermissionSetExpressionRef_SetExpression() {}

func (*PermissionSetExpressionRef_Intersection_) isPermissionSetExpressionRef_SetExpression() {}

type PermissionSetExpressionRef_Union struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operands []*PermissionExpressionRef `protobuf:"bytes,1,rep,name=operands,proto3" json:"operands,omitempty"`
}

func (x *PermissionSetExpressionRef_Union) Reset() {
	*x = PermissionSetExpressionRef_Union{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorizer_v1alpha1_authorizer_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermissionSetExpressionRef_Union) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionSetExpressionRef_Union) ProtoMessage() {}

func (x *PermissionSetExpressionRef_Union) ProtoReflect() protoreflect.Message {
	mi := &file_authorizer_v1alpha1_authorizer_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionSetExpressionRef_Union.ProtoReflect.Descriptor instead.
func (*PermissionSetExpressionRef_Union) Descriptor() ([]byte, []int) {
	return file_authorizer_v1alpha1_authorizer_proto_rawDescGZIP(), []int{8, 0}
}

func (x *PermissionSetExpressionRef_Union) GetOperands() []*PermissionExpressionRef {
	if x != nil {
		return x.Operands
	}
	return nil
}

type PermissionSetExpressionRef_Intersection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operands []*PermissionExpressionRef `protobuf:"bytes,2,rep,name=operands,proto3" json:"operands,omitempty"`
}

func (x *PermissionSetExpressionRef_Intersection) Reset() {
	*x = PermissionSetExpressionRef_Intersection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorizer_v1alpha1_authorizer_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermissionSetExpressionRef_Intersection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionSetExpressionRef_Intersection) ProtoMessage() {}

func (x *PermissionSetExpressionRef_Intersection) ProtoReflect() protoreflect.Message {
	mi := &file_authorizer_v1alpha1_authorizer_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionSetExpressionRef_Intersection.ProtoReflect.Descriptor instead.
func (*PermissionSetExpressionRef_Intersection) Descriptor() ([]byte, []int) {
	return file_authorizer_v1alpha1_authorizer_proto_rawDescGZIP(), []int{8, 1}
}

func (x *PermissionSetExpressionRef_Intersection) GetOperands() []*PermissionExpressionRef {
	if x != nil {
		return x.Operands
	}
	return nil
}

var File_authorizer_v1alpha1_authorizer_proto protoreflect.FileDescriptor

var file_authorizer_v1alpha1_authorizer_proto_rawDesc = []byte{
	0x0a, 0x24, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x22, 0xce, 0x01, 0x0a, 0x06,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x5b, 0x0a, 0x10, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0f, 0x74, 0x79, 0x70, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x1a, 0x67, 0x0a, 0x14, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x39, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8c, 0x03, 0x0a,
	0x0e, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x50, 0x0a, 0x09, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x56, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x5b, 0x0a,
	0x0e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x33, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x5f, 0x0a, 0x10, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x35, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x79, 0x0a, 0x08, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x59, 0x0a, 0x11, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x74, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x5a, 0x0a, 0x17, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x6e, 0x0a, 0x0a, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4c, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0xd0, 0x02, 0x0a, 0x17, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x12, 0x5b,
	0x0a, 0x10, 0x75, 0x6e, 0x61, 0x72, 0x79, 0x5f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55,
	0x6e, 0x61, 0x72, 0x79, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0f, 0x75, 0x6e, 0x61, 0x72,
	0x79, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x70, 0x0a, 0x17, 0x68,
	0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x65, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x48, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x69, 0x63, 0x61, 0x6c, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x16, 0x68, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x69,
	0x63, 0x61, 0x6c, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x58, 0x0a,
	0x0e, 0x73, 0x65, 0x74, 0x5f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x65, 0x74, 0x45, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x0c, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x44, 0x0a, 0x19, 0x55, 0x6e, 0x61, 0x72, 0x79, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4e, 0x0a, 0x20, 0x48,
	0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x69, 0x63, 0x61, 0x6c, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62,
	0x61, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x8e, 0x03, 0x0a, 0x1a,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x45, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x12, 0x4d, 0x0a, 0x05, 0x75, 0x6e,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x45, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x2e, 0x55, 0x6e, 0x69, 0x6f, 0x6e,
	0x48, 0x00, 0x52, 0x05, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x12, 0x62, 0x0a, 0x0c, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x74, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x51, 0x0a,
	0x05, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x6e,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x6e, 0x64, 0x73,
	0x1a, 0x58, 0x0a, 0x0c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x48, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66,
	0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x42, 0x10, 0x0a, 0x0e, 0x73, 0x65,
	0x74, 0x5f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x47, 0x5a, 0x45,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x6f, 0x6e, 0x2d, 0x77,
	0x68, 0x69, 0x74, 0x2f, 0x66, 0x65, 0x6c, 0x64, 0x65, 0x72, 0x61, 0x2d, 0x72, 0x65, 0x62, 0x61,
	0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x3b, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_authorizer_v1alpha1_authorizer_proto_rawDescOnce sync.Once
	file_authorizer_v1alpha1_authorizer_proto_rawDescData = file_authorizer_v1alpha1_authorizer_proto_rawDesc
)

func file_authorizer_v1alpha1_authorizer_proto_rawDescGZIP() []byte {
	file_authorizer_v1alpha1_authorizer_proto_rawDescOnce.Do(func() {
		file_authorizer_v1alpha1_authorizer_proto_rawDescData = protoimpl.X.CompressGZIP(file_authorizer_v1alpha1_authorizer_proto_rawDescData)
	})
	return file_authorizer_v1alpha1_authorizer_proto_rawDescData
}

var file_authorizer_v1alpha1_authorizer_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_authorizer_v1alpha1_authorizer_proto_goTypes = []interface{}{
	(*Schema)(nil),                           // 0: authorizer.v1alpha1.Schema
	(*TypeDefinition)(nil),                   // 1: authorizer.v1alpha1.TypeDefinition
	(*Relation)(nil),                         // 2: authorizer.v1alpha1.Relation
	(*RelationTypeRestriction)(nil),          // 3: authorizer.v1alpha1.RelationTypeRestriction
	(*Permission)(nil),                       // 4: authorizer.v1alpha1.Permission
	(*PermissionExpressionRef)(nil),          // 5: authorizer.v1alpha1.PermissionExpressionRef
	(*UnaryPermissionExpression)(nil),        // 6: authorizer.v1alpha1.UnaryPermissionExpression
	(*HierarchicalPermissionExpression)(nil), // 7: authorizer.v1alpha1.HierarchicalPermissionExpression
	(*PermissionSetExpressionRef)(nil),       // 8: authorizer.v1alpha1.PermissionSetExpressionRef
	nil,                                      // 9: authorizer.v1alpha1.Schema.TypeDefinitionsEntry
	nil,                                      // 10: authorizer.v1alpha1.TypeDefinition.RelationsEntry
	nil,                                      // 11: authorizer.v1alpha1.TypeDefinition.PermissionsEntry
	(*PermissionSetExpressionRef_Union)(nil), // 12: authorizer.v1alpha1.PermissionSetExpressionRef.Union
	(*PermissionSetExpressionRef_Intersection)(nil), // 13: authorizer.v1alpha1.PermissionSetExpressionRef.Intersection
}
var file_authorizer_v1alpha1_authorizer_proto_depIdxs = []int32{
	9,  // 0: authorizer.v1alpha1.Schema.type_definitions:type_name -> authorizer.v1alpha1.Schema.TypeDefinitionsEntry
	10, // 1: authorizer.v1alpha1.TypeDefinition.relations:type_name -> authorizer.v1alpha1.TypeDefinition.RelationsEntry
	11, // 2: authorizer.v1alpha1.TypeDefinition.permissions:type_name -> authorizer.v1alpha1.TypeDefinition.PermissionsEntry
	3,  // 3: authorizer.v1alpha1.Relation.type_restrictions:type_name -> authorizer.v1alpha1.RelationTypeRestriction
	5,  // 4: authorizer.v1alpha1.Permission.expression:type_name -> authorizer.v1alpha1.PermissionExpressionRef
	6,  // 5: authorizer.v1alpha1.PermissionExpressionRef.unary_expression:type_name -> authorizer.v1alpha1.UnaryPermissionExpression
	7,  // 6: authorizer.v1alpha1.PermissionExpressionRef.hierarchical_expression:type_name -> authorizer.v1alpha1.HierarchicalPermissionExpression
	8,  // 7: authorizer.v1alpha1.PermissionExpressionRef.set_expression:type_name -> authorizer.v1alpha1.PermissionSetExpressionRef
	12, // 8: authorizer.v1alpha1.PermissionSetExpressionRef.union:type_name -> authorizer.v1alpha1.PermissionSetExpressionRef.Union
	13, // 9: authorizer.v1alpha1.PermissionSetExpressionRef.intersection:type_name -> authorizer.v1alpha1.PermissionSetExpressionRef.Intersection
	1,  // 10: authorizer.v1alpha1.Schema.TypeDefinitionsEntry.value:type_name -> authorizer.v1alpha1.TypeDefinition
	2,  // 11: authorizer.v1alpha1.TypeDefinition.RelationsEntry.value:type_name -> authorizer.v1alpha1.Relation
	4,  // 12: authorizer.v1alpha1.TypeDefinition.PermissionsEntry.value:type_name -> authorizer.v1alpha1.Permission
	5,  // 13: authorizer.v1alpha1.PermissionSetExpressionRef.Union.operands:type_name -> authorizer.v1alpha1.PermissionExpressionRef
	5,  // 14: authorizer.v1alpha1.PermissionSetExpressionRef.Intersection.operands:type_name -> authorizer.v1alpha1.PermissionExpressionRef
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_authorizer_v1alpha1_authorizer_proto_init() }
func file_authorizer_v1alpha1_authorizer_proto_init() {
	if File_authorizer_v1alpha1_authorizer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_authorizer_v1alpha1_authorizer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Schema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorizer_v1alpha1_authorizer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorizer_v1alpha1_authorizer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Relation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorizer_v1alpha1_authorizer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelationTypeRestriction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorizer_v1alpha1_authorizer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Permission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorizer_v1alpha1_authorizer_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermissionExpressionRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorizer_v1alpha1_authorizer_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnaryPermissionExpression); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorizer_v1alpha1_authorizer_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HierarchicalPermissionExpression); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorizer_v1alpha1_authorizer_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermissionSetExpressionRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorizer_v1alpha1_authorizer_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermissionSetExpressionRef_Union); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorizer_v1alpha1_authorizer_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermissionSetExpressionRef_Intersection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_authorizer_v1alpha1_authorizer_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*PermissionExpressionRef_UnaryExpression)(nil),
		(*PermissionExpressionRef_HierarchicalExpression)(nil),
		(*PermissionExpressionRef_SetExpression)(nil),
	}
	file_authorizer_v1alpha1_authorizer_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*PermissionSetExpressionRef_Union_)(nil),
		(*PermissionSetExpressionRef_Intersection_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_authorizer_v1alpha1_authorizer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_authorizer_v1alpha1_authorizer_proto_goTypes,
		DependencyIndexes: file_authorizer_v1alpha1_authorizer_proto_depIdxs,
		MessageInfos:      file_authorizer_v1alpha1_authorizer_proto_msgTypes,
	}.Build()
	File_authorizer_v1alpha1_authorizer_proto = out.File
	file_authorizer_v1alpha1_authorizer_proto_rawDesc = nil
	file_authorizer_v1alpha1_authorizer_proto_goTypes = nil
	file_authorizer_v1alpha1_authorizer_proto_depIdxs = nil
}
